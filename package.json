{
  "name": "microservice-architecture",
  "version": "1.0.0",
  "description": "Microservice architecture with API Gateway",
  "main": "index.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/gateway/server.js",
    "dev": "ts-node-dev --respawn --transpile-only gateway/server.ts",
    "dev:gateway": "ts-node-dev --respawn --transpile-only gateway/server.ts",
    "dev:auth": "ts-node-dev --respawn --transpile-only services/auth-service/server.ts",
    "dev:user": "ts-node-dev --respawn --transpile-only services/user-service/server.ts",
    "dev:product": "ts-node-dev --respawn --transpile-only services/product-service/server.ts",
    "dev:order": "ts-node-dev --respawn --transpile-only services/order-service/server.ts",
    "start:gateway": "node dist/gateway/server.js",
    "start:auth": "node dist/services/auth-service/server.js",
    "start:user": "node dist/services/user-service/server.js",
    "start:product": "node dist/services/product-service/server.js",
    "start:order": "node dist/services/order-service/server.js",
    "start:all": "npm run start:gateway & npm run start:auth & npm run start:user & npm run start:product & npm run start:order",
    "start:all:win": "start /B npm run start:gateway & start /B npm run start:auth & start /B npm run start:user & start /B npm run start:product & start /B npm run start:order",
    "start:all:mac": "npm run start:gateway & npm run start:auth & npm run start:user & npm run start:product & npm run start:order",
    "start:all:linux": "npm run start:gateway & npm run start:auth & npm run start:user & npm run start:product & npm run start:order",
    "restart:all": "npm run stop:all && npm run start:all",
    "restart:all:win": "npm run stop:all:win && npm run start:all:win",
    "restart:all:mac": "npm run stop:all:mac && npm run start:all:mac",
    "restart:all:linux": "npm run stop:all:linux && npm run start:all:linux",
    "stop:all": "pkill -f 'node gateway/server.js' && pkill -f 'node services/auth-service/server.js' && pkill -f 'node services/user-service/server.js' && pkill -f 'node services/product-service/server.js' && pkill -f 'node services/order-service/server.js'",
    "stop:all:win": "taskkill /F /IM node.exe",
    "stop:all:mac": "pkill -f 'node gateway/server.js' && pkill -f 'node services/auth-service/server.js' && pkill -f 'node services/user-service/server.js' && pkill -f 'node services/product-service/server.js' && pkill -f 'node services/order-service/server.js'",
    "stop:all:linux": "pkill -f 'node gateway/server.js' && pkill -f 'node services/auth-service/server.js' && pkill -f 'node services/user-service/server.js' && pkill -f 'node services/product-service/server.js' && pkill -f 'node services/order-service/server.js'",
    "dev:all": "concurrently \"npm run dev\" \"npm run start:auth\" \"npm run start:user\" \"npm run start:product\" \"npm run start:order\"",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up",
    "docker:down": "docker-compose down",
    "docker:restart": "docker-compose down && docker-compose up"
  },
  "keywords": [
    "microservice",
    "api-gateway",
    "nodejs",
    "express"
  ],
  "author": "Your Name",
  "license": "MIT",
  "dependencies": {
    "@types/nodemailer": "^7.0.1",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "helmet": "^7.1.0",
    "http-proxy-middleware": "^2.0.6",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.0.3",
    "morgan": "^1.10.0",
    "nodemailer": "^7.0.6"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.10.5",
    "concurrently": "^8.2.2",
    "nodemon": "^3.0.2",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.3.3"
  }
}
